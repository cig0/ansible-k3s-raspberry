---
- name: Download k3s and install on first master
  run_once: true
  shell: |
    set -o pipefail
    curl -sfL https://get.k3s.io | \
      INSTALL_K3S_VERSION={{ k3s.version }} \
      K3S_DATASTORE_ENDPOINT={{ etcd.data_store_endpoint }}
      sh -s - server \
      --cluster-init \
      --data-dir {{ k3s.data_dir }} \
      --datastore-cafile {{ etcd.initial_ca_dir }}/ca.pem \
      --datastore-certfile {{ etcd.initial_ca_dir }}/{{ inventory_hostname.split('.') | first }}.pem \
      --datastore-keyfile	{{ etcd.initial_ca_dir }}/{{ inventory_hostname.split('.') | first }}-key.pem \
      --disable "{{ k3s.disable_svc }}" \
      "{{ k3s.extra_server_args }}"
  args:
    executable: /bin/bash

- name: Wait for node-token
  wait_for:
    path: /var/lib/rancher/k3s/server/node-token
  when: inventory_hostname == play_hosts[0]

- name: Read node-token from master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token
  when: inventory_hostname == play_hosts[0]

- name: Store Master node-token
  set_fact:
    token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"
  when: inventory_hostname == play_hosts[0]

- name: Download k3s the others masters
  shell: |
    set -o pipefail
    curl -sfL https://get.k3s.io | \
      INSTALL_K3S_VERSION={{ k3s.version }} \
      K3S_URL=https://{{ hostvars[play_hosts[0]]['ansible_default_ipv4']['address'] }}:6443 \
      K3S_TOKEN={{ hostvars[play_hosts[0]].token }} \
      K3S_DATASTORE_ENDPOINT={{ etcd.data_store_endpoint }}
      sh -s - server \
      --data-dir  {{ k3s.data_dir }} \
      --datastore-cafile {{ etcd.initial_ca_dir }}/ca.pem \
      --datastore-certfile {{ etcd.initial_ca_dir }}/{{ inventory_hostname.split('.') | first }}.pem \
      --datastore-keyfile	{{ etcd.initial_ca_dir }}/{{ inventory_hostname.split('.') | first }}-key.pem \
      --disable "{{ k3s.disable_svc }}"
  args:
    executable: /bin/bash
